{
    auto_https off  # Disable automatic HTTPS since Cloudflare manages it
    admin off
    log {
        output file /var/log/caddy_debug.log
        format json
        level debug
    }
}

# Redirect HTTP to HTTPS, except for ACME challenge
http://mindlink.cc, http://app.mindlink.cc {
    route /.well-known/acme-challenge/* {
        root * /var/www/acme-challenges
        file_server
    }

    redir https://{host}{uri} permanent
}

# HTTPS configurations
https://mindlink.cc, https://app.mindlink.cc {
    # No TLS configuration because Cloudflare manages HTTPS externally
    header {
        Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        Referrer-Policy "no-referrer-when-downgrade"
        Content-Security-Policy "default-src 'self'"
        X-Forwarded-Proto "https"  # Force HTTPS in the header
        X-Forwarded-For {remote_host}
        Host {host}
    }

    # ACME challenge handling for HTTPS
    handle /.well-known/acme-challenge/* {
        root * /var/www/acme-challenges
        file_server
    }

    # AWSBotService routing
    handle /s3* {
        reverse_proxy https://awsbotservice.railway.internal:443 {
            transport http {
                tls_insecure_skip_verify
            }
        }
    }

    # Skills Management Service routing
    handle /skills* {
        reverse_proxy https://sithskillsservice-finalproduction.up.railway.app {
            transport http {
                tls_insecure_skip_verify
            }
        }
    }

    # SithBotModeManagerService routing
    handle /mode* {
        reverse_proxy http://sithbotmodemanagerservice.railway.internal {  # Changed to HTTP to prevent redirect loops
            transport http {
                tls_insecure_skip_verify
            }
        }
    }

    # SithPythonServices routing
    handle /memory* {
        reverse_proxy https://sithpythonservices.railway.internal:443 {
            transport http {
                tls_insecure_skip_verify
            }
        }
    }

    # Static file serving
    handle {
        root * /var/www/html
        file_server
    }

    # Error handling
    handle_errors {
        rewrite * /error.html
        file_server
    }
}
